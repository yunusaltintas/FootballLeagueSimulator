// <auto-generated />
using LeagueSimulator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeagueSimulator.Data.Migrations
{
    [DbContext(typeof(LeagueDbContext))]
    [Migration("20210428121318_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeagueSimulator.Core.Entities.PredictionChamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Prediction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("PredictionChamps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Prediction = 0m,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Prediction = 0m,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 3,
                            Prediction = 0m,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 4,
                            Prediction = 0m,
                            TeamId = 4
                        });
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.PuanTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Averaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Draw")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GoalsConceded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("GoalsScored")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Lose")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Point")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("Win")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("PuanTables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Averaj = 0,
                            Draw = 0,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Lose = 0,
                            Point = 0,
                            TeamId = 1,
                            Win = 0
                        },
                        new
                        {
                            Id = 2,
                            Averaj = 0,
                            Draw = 0,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Lose = 0,
                            Point = 0,
                            TeamId = 2,
                            Win = 0
                        },
                        new
                        {
                            Id = 3,
                            Averaj = 0,
                            Draw = 0,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Lose = 0,
                            Point = 0,
                            TeamId = 3,
                            Win = 0
                        },
                        new
                        {
                            Id = 4,
                            Averaj = 0,
                            Draw = 0,
                            GoalsConceded = 0,
                            GoalsScored = 0,
                            Lose = 0,
                            Point = 0,
                            TeamId = 4,
                            Win = 0
                        });
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Chance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Defense")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Attack = 99,
                            Chance = 99,
                            Defense = 99,
                            Name = "Kocaelispor"
                        },
                        new
                        {
                            Id = 2,
                            Attack = 88,
                            Chance = 85,
                            Defense = 82,
                            Name = "Read Madrid"
                        },
                        new
                        {
                            Id = 3,
                            Attack = 90,
                            Chance = 91,
                            Defense = 80,
                            Name = "Barcalona"
                        },
                        new
                        {
                            Id = 4,
                            Attack = 92,
                            Chance = 88,
                            Defense = 85,
                            Name = "Bayern Münih"
                        });
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.WeeklyResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AwayTeamGoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamGoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("WeeklyResults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AwayTeamGoal = 0,
                            AwayTeamId = 2,
                            HomeTeamGoal = 0,
                            HomeTeamId = 1,
                            Week = 1
                        },
                        new
                        {
                            Id = 2,
                            AwayTeamGoal = 0,
                            AwayTeamId = 4,
                            HomeTeamGoal = 0,
                            HomeTeamId = 3,
                            Week = 1
                        },
                        new
                        {
                            Id = 3,
                            AwayTeamGoal = 0,
                            AwayTeamId = 3,
                            HomeTeamGoal = 0,
                            HomeTeamId = 2,
                            Week = 2
                        },
                        new
                        {
                            Id = 4,
                            AwayTeamGoal = 0,
                            AwayTeamId = 1,
                            HomeTeamGoal = 0,
                            HomeTeamId = 4,
                            Week = 2
                        },
                        new
                        {
                            Id = 5,
                            AwayTeamGoal = 0,
                            AwayTeamId = 1,
                            HomeTeamGoal = 0,
                            HomeTeamId = 3,
                            Week = 3
                        },
                        new
                        {
                            Id = 6,
                            AwayTeamGoal = 0,
                            AwayTeamId = 4,
                            HomeTeamGoal = 0,
                            HomeTeamId = 2,
                            Week = 3
                        },
                        new
                        {
                            Id = 7,
                            AwayTeamGoal = 0,
                            AwayTeamId = 3,
                            HomeTeamGoal = 0,
                            HomeTeamId = 4,
                            Week = 4
                        },
                        new
                        {
                            Id = 8,
                            AwayTeamGoal = 0,
                            AwayTeamId = 1,
                            HomeTeamGoal = 0,
                            HomeTeamId = 2,
                            Week = 4
                        },
                        new
                        {
                            Id = 9,
                            AwayTeamGoal = 0,
                            AwayTeamId = 3,
                            HomeTeamGoal = 0,
                            HomeTeamId = 1,
                            Week = 5
                        },
                        new
                        {
                            Id = 10,
                            AwayTeamGoal = 0,
                            AwayTeamId = 2,
                            HomeTeamGoal = 0,
                            HomeTeamId = 4,
                            Week = 5
                        },
                        new
                        {
                            Id = 11,
                            AwayTeamGoal = 0,
                            AwayTeamId = 4,
                            HomeTeamGoal = 0,
                            HomeTeamId = 1,
                            Week = 6
                        },
                        new
                        {
                            Id = 12,
                            AwayTeamGoal = 0,
                            AwayTeamId = 2,
                            HomeTeamGoal = 0,
                            HomeTeamId = 3,
                            Week = 6
                        });
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.PredictionChamp", b =>
                {
                    b.HasOne("LeagueSimulator.Core.Entities.Team", "Team")
                        .WithOne("PredictionChamp")
                        .HasForeignKey("LeagueSimulator.Core.Entities.PredictionChamp", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.PuanTable", b =>
                {
                    b.HasOne("LeagueSimulator.Core.Entities.Team", "Team")
                        .WithOne("PuanTable")
                        .HasForeignKey("LeagueSimulator.Core.Entities.PuanTable", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.WeeklyResult", b =>
                {
                    b.HasOne("LeagueSimulator.Core.Entities.Team", "Team")
                        .WithMany("WeeklyResults")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LeagueSimulator.Core.Entities.Team", b =>
                {
                    b.Navigation("PredictionChamp");

                    b.Navigation("PuanTable");

                    b.Navigation("WeeklyResults");
                });
#pragma warning restore 612, 618
        }
    }
}
